<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="/socket.io/socket.io.js"></script>

<!DOCTYPE html>
<html>
  <head>
    <title>Czat - <%= username %></title>
    <h1 class=" text-light" style="padding: 20px; background-color: rgba(0, 0, 0, 0.925);">Czat</h1> 
    <style>
      body {
        padding: 0px;
      }
      tab.active{
          background:rgba(255, 0, 0, 0.548);
      }
      button.btn:active{
          background:rgba(255, 254, 254, 0.541);
      }

      #messages { list-style-type: none; margin: 0; padding: 0; flex-grow: 1; }
      #messages > li { padding: 0.5rem 1rem; }
      
    </style>
  </head>
  <body style="margin-bottom: 0px;">
    <div class="container-fluid" style="position: relative; top: -8px; width: 100%; padding: 0; ">
      <div class="row " style="height: 89%; max-height: 89%; margin-bottom: 0;">
        <div class="col-lg-4 d-flex flex-column flex-grow" style="margin-right: -30px;">
          <ul class="nav nav-tabs" style="background-color: rgba(0, 0, 0, 0.925);">
            <div>
              <button type="button" class="nav-item btn btn-danger shadow" data-toggle="modal" data-target="#profile" style="height: 100%;">
                <%= username %>
              </button>
            </div>
            
            <li class="nav-item" style="margin-left: 50px;">
              <a class="nav-link active" data-toggle="tab" href="#Groups">Groups</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" data-toggle="tab" href="#Contacts">Contacts</a>
            </li>
          </ul>
          <div class="tab-content overflow-auto" style="height: 100%;">
            <div class="tab-pane active container-fluid  overflow-auto" id="Groups" style="width: 100%; height: 100%;">
              <div class = "grp btn-group-vertical shadow" form="input nav flex-column" type="submit" id="grp-btn" style="width: 100%; margin-top: 10px;">
                <a class="nav-link btn btn-outline-danger active text-dark" type="submit" href="#Global" id="Global">Global</a>
              </div>
              <div class="form-inline" style="position: absolute; bottom: -1px">
                <button type="button" class="btn btn-dark d-flex shadow" data-toggle="modal" data-target="#addGroup">
                  Add New Group
                </button>
                <button type="button" class="btn btn-danger shadow d-flex ml-4"  data-toggle="modal" data-target="#remGroup" style="position: relative; bottom: 1px">
                  Remove Group
                </button>
              </div>
            </div>
            <div class="tab-pane container-fluid overflow-auto" id="Contacts" style="height: 100%;" >
              <p></p>
              <div class="btn-group-vertical shadow " id="Contact" style="width: 100%;">
              </div>
              <p></p>
              <h3 class ="p-3 text-center" style="width: 100%;">Online Users:</h3>
              <div class="container-fluid w-100 overflow-auto" id="grp-btn">
                
                <div class="btn-group-vertical shadow " id="Online" style="width: 100%;"></div>
              </div>
            </div>
          </div>  
          <div class="modal" id="profile">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h4 class="modal-title" style="margin-right: 20px;">
                    <%= username %>
                  </h4>
                  <a class="link btn btn-dark shadow" type="button" href="/logout">Sign Out</a>
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
          <div class="modal" id="addGroup">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h4 class="modal-title">
                    Group Name:
                    <form class="container-fluid form-inline" id="group-form" action="">
                      <input class="form-control p-1 m-1 " type="text" id="txt" action="" required pattern="\S+" />
                      <button class="btn btn-primary" type="button">Add Group</button>
                    </form>
                  </h4>
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
          <div class="modal" id="remGroup">
            <div class="modal-dialog">
              <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                  <h4 class="modal-title">
                    Groups to Remove:
                    <div class="btn-group-vertical shadow" id="group-rem" style="list-style: none; width: 100%;">
                      
                    </div>
                  </h4>
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <!-- Modal footer -->
                <div class="modal-footer">
                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="container col-sm-8 border-left" style="max-height: 100%;">
          <div>
            <h3 class="bg-danger text-light text-center" style="padding: 4px; margin-left: -16px; margin-right: -15px;">Messages</> 
          </div>
          <div class="chat-messages border-bottom" style="overflow: auto; position: relative; top: -8px; margin-left: -15px; margin-right: -15px;">
            <ul class="messages" id="messages"  style="overflow: auto; height: 85%;"></ul>
          </div>
          <form class="form-inline" id="form" action="" style="position: relative; bottom: -15px">
            <input class="form-control flex-grow-1" id="msg" type="text" autocomplete="off" style="margin-right: 5px;" />
            <button class="btn btn-primary" style="margin-right: 5px;">Send</button>
          </form>
        </div>

          <script>
            jQuery("#grp-btn .btn").click(function(){
              jQuery("#grp-btn .btn").removeClass('active');
              jQuery(this).toggleClass('active'); 
            });

            var username = document.cookie;
            
            var user = document.createElement('li');
            user.textContent = "<%= username %>";

            const socket = io()

            socket.on('allUsers', (data) => {
              data.map((d) => {
                listUsers(d.username)
              })
            })

            function listUsers(user) {
              var a = document.createElement('div');
              a.classList.add("text-dark", "nav-link", "btn", "btn-outline-danger", "p-2");
              a.style = ("text-align: center")
              a.onclick = function() {PM(a.id)};
              a.innerText = user;
              a.id = user;
              
              document.getElementById("Contact").appendChild(a);
              jQuery("#Contacts .btn").click(function(){
                jQuery("#Contacts .btn").removeClass('active');
                jQuery(this).toggleClass('active'); 
              });
            }
            
            socket.on("loadRoom", function(data) {
              data.map((d) => {
                  makeRoom(d.name);
              })
            })

            socket.on("onlineUsers", (onlineUser) => {
              listOnline(onlineUser);
            })

            function listOnline(user) {
              var a = document.createElement('div');
              a.classList.add("text-dark", "nav-link", "btn", "btn-outline-success", "p-2");
              a.style = ("text-align: center")
              a.onclick = function() {PM(a.id)};
              a.innerText = user;
              var name = (user + "online");
              a.name = name;
              a.id = user;
              console.log(a.name);
              document.getElementById("Online").appendChild(a);
              jQuery("#Online .btn").click(function(){
                jQuery("#Online .btn").removeClass('active');
                jQuery(this).toggleClass('active'); 
              })
            }

            socket.on("Offline", (user) => {
              
              var name = (user + "online");
              console.log(name)
              var div = document.getElementById(name);

              div.remove();
            })

            var form = document.getElementById('form');
            var remGroup = document.getElementById('group-rem');
            var group = document.getElementById("grp-btn");
            var newGroup = document.getElementById("group-form");
            
            var room = "Global";
            while(messages.firstChild)
            {
              messages.removeChild(messages.firstChild);
            }
            socket.emit('loadRoom', room);
            socket.emit('joinRoom', { username, room })
            //socket.emit("Online", username);

            group.addEventListener("click", function(e) {
              e.preventDefault;
              
              room = e.target.id;
              console.log(room);
              while(messages.firstChild)
              {
                messages.removeChild(messages.firstChild);
              }
              socket.emit('loadRoom', room);
              socket.emit('joinRoom', { username, room })
            })

            newGroup.addEventListener("submit", function(e) {
              e.preventDefault;
              let txt = e.target.elements.txt.value;
              console.log(txt);
              
              
              e.target.elements.txt.value = '';
              socket.emit("group", txt);
            })

            socket.on("reload", (txt) => {
              makeRoom(txt);
            })


            function remRoom(txt) {
              socket.emit('delRoom', txt)
            }
            socket.on("goHome", (room) => {
              while(messages.firstChild)
              {
                messages.removeChild(messages.firstChild);
              }
              var div = document.getElementById(room);
              div.remove();
              var div2 = document.getElementById(room);
              div2.remove();
                  
            })

            function makeRoom(txt) {
              //const li = document.createElement('li');
              //li.classList.add("nav-item", "p-1", "m-0", "align-center"); 
              var a = document.createElement('a')
              a.classList.add("nav-link", "btn", "btn-outline-danger", "text-dark")
              a.innerText = txt;
              a.ref = `#${txt}`;
              a.id = txt;
              //li.appendChild(a);
              const a2 = a.cloneNode(true);
              a2.onclick = function() {remRoom(a.id)};
              document.getElementById("grp-btn").appendChild(a);
              document.getElementById("group-rem").appendChild(a2);
              jQuery("#grp-btn .btn").click(function(){
                jQuery("#grp-btn .btn").removeClass('active');
                jQuery(this).toggleClass('active'); 
              });
            }

            socket.on('load', ({ data, room }) => {
              data.map((d) => {
                if(d.name == room)
                {
                  outputMessage(d);
                  window.scrollTo(0, document.body.scrollHeight);
                  messages.scrollTop = messages.scrollHeight;
                }
              })
            })

            form.addEventListener('submit', function(e) {
              e.preventDefault();
              let msg = e.target.elements.msg.value;
              msg = msg.trim();
              if (msg) {
                socket.emit('chat message', { msg, room });
                //socket.emit('group', { msg, room });
                e.target.elements.msg.value = '';
                e.target.elements.msg.focus();
              }
            });

            socket.on('message', function(msg) {
              outputMessage(msg)
              messages.scrollTop = messages.scrollHeight;
            });

            /*socket.on('roomUsers', ({ room, users }) => {
              outputRoomName(room);
              outputUsers(users);
            };*/

            function outputMessage(message) {
              const div = document.createElement('li');
              if(message.username == username) {
                div.classList.add("btn", "btn-dark", "shadow")
                div.style = ("text-align: right; float: right; max-width: px; border-radius: 16px; max-height: 80px; margin-right: 10px")
              }
              else if(message.username == "Czat Bot: ") {
                div.classList.add("btn", "btn-dark", "shadow-lg")
                div.style = ("text-align: left; float: left; max-width: px; border-radius: 16px; max-height: 80px; margin-left: 10px")
              }
              else {
                div.classList.add("btn", "btn-light", "shadow")
                div.style = ("text-align: left; float: left; max-width: px; border-radius: 16px; max-height: 80px; margin-left: 10px")
              }
              
              div.classList.add('messages');
              const p = document.createElement('p');
              p.classList.add('meta', "card-title");
              p.innerText = message.username + "";
              p.innerHTML += `<span> ${message.time}</span>`;
              div.appendChild(p);
              const para = document.createElement('p');
              para.classList.add('text');
              para.innerText = message.text;
              div.appendChild(para);
              messages.appendChild(div);
              messages.innerHTML += `<li><br></br><br></li>`
            }

            function PM(otherUser) {
              console.log(otherUser);
              while(messages.firstChild)
              {
                messages.removeChild(messages.firstChild);
              }
              var PR;
              if(username < otherUser) 
                PR = (username + otherUser);
              else 
                PR = (otherUser + username);
              socket.emit('loadRoom', PR);
              console.log(PR);
              socket.emit('privateRoom', otherUser)
            }

            function outputRoomName(room) {
              roomName.innerText = room;
            }

            function outputUsers(users) {
              userList.innerHTML = '';
              users.forEach((user) => {
                const li = document.createElement('li');
                li.innerText = user.username;
                userList.appendChild(li);
              });
            }
        </script>
      </div>
    </div>
  </body>
</html>